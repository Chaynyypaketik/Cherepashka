#include <iostream>
#include <string>
#include <cmath>
#include <iomanip>

using namespace std;

double calculate(double num1, double num2, char op) {
    switch (op) {
        case '+':
            return num1 + num2;
        case '-':
            return num1 - num2;
        case '*':
            return num1 * num2;
        case '/':
            if (num2 == 0) {
                throw runtime_error("Деление на ноль!");
            }
            return num1 / num2;
        case '^':
            return pow(num1, num2);
        default:
            throw runtime_error("Неизвестная операция!");
    }
}

int main() {
    double num1, num2, result;
    char op;

    cout << "Простой консольный калькулятор" << endl;

    while (true) {
        cout << "Введите первое число: ";
        if (!(cin >> num1)) {
            cout << "Неверный ввод. Пожалуйста, введите число." << endl;
            cin.clear(); 
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            continue;
        }

        cout << "Введите оператор (+, -, *, /, ^): ";
        if (!(cin >> op)) {
           cout << "Неверный ввод. Пожалуйста, введите оператор." << endl;
           cin.clear();
           cin.ignore(numeric_limits<streamsize>::max(), '\n');
           continue;
        }

        cout << "Введите второе число: ";
        if (!(cin >> num2)) {
          cout << "Неверный ввод. Пожалуйста, введите число." << endl;
          cin.clear();
          cin.ignore(numeric_limits<streamsize>::max(), '\n');
          continue;
        }

        try {
            result = calculate(num1, num2, op);
           
             cout << fixed << setprecision(2) << "Результат: " << result << endl;
        } catch (const runtime_error& error) {
            cerr << "Ошибка: " << error.what() << endl;
        }

          char continueCalc;
        cout << "Хотите продолжить (y/n)? ";
        cin >> continueCalc;
        if(continueCalc != 'y'){
            break;
        }
    }

    cout << "Калькулятор завершил работу." << endl;

    return 0;
}
